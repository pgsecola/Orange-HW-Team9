library(dplyr)
library(doBy)
library(bindr)
library(ggplot2)
library(histogram)
library(stringr)
library(tidyverse)
library(tidyr)
library(readxl)
library(tibble)
library(SASxport)
library(reshape2)
library(haven)
library(fma)
library(tseries)
library(expsmooth)
library(lmtest)
library(zoo)
library(seasonal)
library(lubridate)
library(data.table)
library(caret)
library(corrplot)
library(shiny)
library(splitstackshape)
library(gutenbergr)
library(text2vec)
library(tidytext)
library(wordcloud)
library(graphics)
library(ks)
library(EnvStats)
library(nortest)
library(graphics)
library(quantmod)
library(scales)
library(TTR)
library(survival)
library(survminer)
library(flexsurv)
library(splines)
library(mclust)
library(factoextra)


times <- seq(1,295)/100 # Observations in 1/100th of a second
X <- bs(times,intercept=TRUE,df=60) #create a spline to 
#model the data
betas <- matrix(0,ncol=60,nrow = 6792)
###########################################################
# run a linear regression on each data set
# here I am manipulating my data you I can cluster
###########################################################
for (ii in 1:6792){
  temp <- lm(as.numeric(final_data[ii,6:300])~X-1) #-1 removes the natural intercept
  betas[ii,]  <- coefficients(temp)
}
cdata <- cbind(final_data[,1:5],betas)

#CONVERT EVERTYING TO 'numbers'
cdata$AGE <- as.numeric(cdata$AGE)
cdata$EVER_SMOKE <- as.numeric(cdata$EVER_SMOKE)
cdata$ASTHMA <- as.numeric(cdata$EVER_SMOKE)
cdata$POVERTY_RATIO <- as.numeric(cdata$POVERTY_RATIO)


############Scaling and PCA########
#scale data and then perform PCA for columns 2:65 of data

pcaOut <-  prcomp(cdata[2:65], scale = FALSE)

pca_data <- pcaOut$x

#Standard Dev for first 5 components
std_dev <- pcaOut$sdev[1:5]
std_dev

#45.21508 31.29240 22.37705 17.33125 13.04810

plot(pca_data)


############KMeans Clustering############
#Find Optimum number of clusters thorugh wss and silhouette

fviz_nbclust(pca_data, kmeans, method="wss") # Use 4 clusters
fviz_nbclust(pca_data, kmeans, method="silhouette") # 2 cluster appropiate

#perform KMeans analysis using optimal number of clusters 
#clusters for PCA data
#plot cluster centroids and determine differences/describe clusters
set.seed(12345)

km_clust <- kmeans(pca_data, 4 ,nstart = 25)

#assign observations to their respective clusters

Cluster_Table <- cbind.data.frame(cdata,km_clust$cluster)

names(Cluster_Table)[66] <- "cluster_id"

#Determine clusters w/ largest lung capacity
for(i in 1:6792) {
  Cluster_Table[i,67] <-  integrate(splinefun(times,X%*%t(betas[i,,drop=F])),min(times),max(times))$`value`
}


clust_sum_table <- summarise(group_by(Cluster_Table, cluster_id), 
                             total_lung_cap = sum(integrate(spline_func,min(times),max(times))))
#########Mixture Model#########

set.seed(12345)
data_mclust=cdata[,c(10:20)]
clustBIC <-mclustBIC(data_mclust,modelName = "VVV",G=1:20)   # This is model selection
plot(clustBIC)
#Now using G = 6 and modelNames='VVV' and the same columns, provide a graph of each cluster's mean curve  
clust6    <- Mclust(data_mclust,G=6,modelNames = "VVV")
#add the cluster to original data 
data_mclust$class <- as.factor(clust6$classification)

clustBIC
plot(clust6$z)
